-- Project:   SHW_full
-- Generated: 11/01/2017 05:12:59
-- PSoC Creator  4.1 Update 1

ENTITY SHW_full IS
    PORT(
        Rx_1(0)_PAD : IN std_ulogic;
        Tx_1(0)_PAD : OUT std_ulogic;
        Pin_1(0)_PAD : OUT std_ulogic);
    ATTRIBUTE voltage_VDDABUF OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDA OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VUSB OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDD OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDIO0 OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDIO1 OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDIO2 OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDIO3 OF __DEFAULT__ : ENTITY IS 5e0;
END SHW_full;

ARCHITECTURE __DEFAULT__ OF SHW_full IS
    SIGNAL ClockBlock_100k : bit;
    SIGNAL ClockBlock_1k : bit;
    SIGNAL ClockBlock_32k : bit;
    SIGNAL ClockBlock_BUS_CLK : bit;
    ATTRIBUTE udbclken_assigned OF ClockBlock_BUS_CLK : SIGNAL IS "True";
    ATTRIBUTE global_signal OF ClockBlock_BUS_CLK : SIGNAL IS true;
    SIGNAL ClockBlock_BUS_CLK_local : bit;
    SIGNAL ClockBlock_ILO : bit;
    SIGNAL ClockBlock_IMO : bit;
    SIGNAL ClockBlock_MASTER_CLK : bit;
    SIGNAL ClockBlock_PLL_OUT : bit;
    SIGNAL ClockBlock_XTAL : bit;
    SIGNAL ClockBlock_XTAL_32KHZ : bit;
    SIGNAL Net_142 : bit;
    SIGNAL Net_146 : bit;
    SIGNAL Net_174 : bit;
    SIGNAL Net_209_0 : bit;
    SIGNAL Net_209_1 : bit;
    SIGNAL Net_255 : bit;
    SIGNAL Net_256 : bit;
    SIGNAL Net_257 : bit;
    SIGNAL Net_258 : bit;
    SIGNAL Net_259 : bit;
    SIGNAL Net_260 : bit;
    SIGNAL Net_261 : bit;
    SIGNAL Net_262 : bit;
    SIGNAL Net_28 : bit;
    ATTRIBUTE POWER OF Net_28 : SIGNAL IS true;
    SIGNAL Net_280_0 : bit;
    SIGNAL Net_280_1 : bit;
    SIGNAL Net_280_2 : bit;
    SIGNAL Net_31_3 : bit;
    ATTRIBUTE GROUND OF Net_31_3 : SIGNAL IS true;
    SIGNAL Net_34_0 : bit;
    SIGNAL Net_34_1 : bit;
    SIGNAL Net_34_2 : bit;
    SIGNAL Net_34_3 : bit;
    SIGNAL Net_386 : bit;
    ATTRIBUTE soft OF Net_386 : SIGNAL IS 1;
    SIGNAL Net_404_0 : bit;
    SIGNAL Net_404_1 : bit;
    SIGNAL Net_404_2 : bit;
    SIGNAL Net_420_0 : bit;
    SIGNAL Net_420_1 : bit;
    SIGNAL Net_420_2 : bit;
    SIGNAL Net_447 : bit;
    SIGNAL Net_474 : bit;
    ATTRIBUTE soft OF Net_474 : SIGNAL IS 1;
    SIGNAL Net_485_0 : bit;
    SIGNAL Net_485_1 : bit;
    SIGNAL Net_485_2 : bit;
    SIGNAL Net_485_3 : bit;
    SIGNAL Net_485_4 : bit;
    SIGNAL Net_537 : bit;
    SIGNAL Net_542 : bit;
    SIGNAL Net_57 : bit;
    SIGNAL Net_570 : bit;
    SIGNAL Net_58 : bit;
    SIGNAL Net_59 : bit;
    SIGNAL Net_60 : bit;
    SIGNAL Net_61 : bit;
    SIGNAL Net_617 : bit;
    SIGNAL Net_62 : bit;
    SIGNAL Net_63 : bit;
    SIGNAL Net_64 : bit;
    SIGNAL Net_758 : bit;
    SIGNAL Net_759 : bit;
    SIGNAL Net_760 : bit;
    SIGNAL Net_761 : bit;
    SIGNAL Net_77_0 : bit;
    SIGNAL Net_77_1 : bit;
    SIGNAL Net_77_2 : bit;
    SIGNAL Net_827_0 : bit;
    SIGNAL Net_827_1 : bit;
    SIGNAL Net_827_2 : bit;
    SIGNAL Net_827_3 : bit;
    SIGNAL Net_827_4 : bit;
    SIGNAL Net_827_5 : bit;
    SIGNAL Net_827_6 : bit;
    SIGNAL Net_901 : bit;
    SIGNAL Net_902 : bit;
    SIGNAL Net_911 : bit;
    SIGNAL Net_914 : bit;
    SIGNAL Net_917 : bit;
    SIGNAL Net_923_2 : bit;
    SIGNAL Net_939 : bit;
    SIGNAL Pin_1(0)__PA : bit;
    SIGNAL Pin_2(0)__PA : bit;
    SIGNAL Pin_3(0)__PA : bit;
    SIGNAL Pin_4(0)__PA : bit;
    SIGNAL Pin_5(0)__PA : bit;
    SIGNAL Rx_1(0)__PA : bit;
    SIGNAL Tx_1(0)__PA : bit;
    SIGNAL \\\ADC_SAR:Bypass(0)\\__PA\ : bit;
    SIGNAL \ADC_SAR:Net_207_0\ : bit;
    SIGNAL \ADC_SAR:Net_207_10\ : bit;
    SIGNAL \ADC_SAR:Net_207_11\ : bit;
    SIGNAL \ADC_SAR:Net_207_1\ : bit;
    SIGNAL \ADC_SAR:Net_207_2\ : bit;
    SIGNAL \ADC_SAR:Net_207_3\ : bit;
    SIGNAL \ADC_SAR:Net_207_4\ : bit;
    SIGNAL \ADC_SAR:Net_207_5\ : bit;
    SIGNAL \ADC_SAR:Net_207_6\ : bit;
    SIGNAL \ADC_SAR:Net_207_7\ : bit;
    SIGNAL \ADC_SAR:Net_207_8\ : bit;
    SIGNAL \ADC_SAR:Net_207_9\ : bit;
    SIGNAL \ADC_SAR:Net_252\ : bit;
    SIGNAL \ADC_SAR:Net_381\ : bit;
    SIGNAL \ADC_SAR:Net_381_local\ : bit;
    SIGNAL \ADC_SAR:Net_385\ : bit;
    ATTRIBUTE global_signal OF \ADC_SAR:Net_385\ : SIGNAL IS true;
    SIGNAL \ADC_SAR:Net_385_local\ : bit;
    SIGNAL \CREG_INJ_DONE:control_1\ : bit;
    SIGNAL \CREG_INJ_DONE:control_2\ : bit;
    SIGNAL \CREG_INJ_DONE:control_3\ : bit;
    SIGNAL \CREG_INJ_DONE:control_4\ : bit;
    SIGNAL \CREG_INJ_DONE:control_5\ : bit;
    SIGNAL \CREG_INJ_DONE:control_6\ : bit;
    SIGNAL \CREG_INJ_DONE:control_7\ : bit;
    SIGNAL \CREG_L:control_3\ : bit;
    SIGNAL \CREG_L:control_4\ : bit;
    SIGNAL \CREG_L:control_5\ : bit;
    SIGNAL \CREG_L:control_6\ : bit;
    SIGNAL \CREG_L:control_7\ : bit;
    SIGNAL \CREG_RX_SLOTS1:control_7\ : bit;
    SIGNAL \DAC_FAST:Net_12\ : bit;
    ATTRIBUTE global_signal OF \DAC_FAST:Net_12\ : SIGNAL IS true;
    SIGNAL \DAC_FAST:Net_12_local\ : bit;
    SIGNAL \DAC_FAST:Net_19\ : bit;
    SIGNAL \DAC_SLOW:Net_12\ : bit;
    ATTRIBUTE global_signal OF \DAC_SLOW:Net_12\ : SIGNAL IS true;
    SIGNAL \DAC_SLOW:Net_12_local\ : bit;
    SIGNAL \DAC_SLOW:Net_19\ : bit;
    SIGNAL \PWM_LED:PWMUDB:cmp1_less\ : bit;
    SIGNAL \PWM_LED:PWMUDB:prevCompare1\ : bit;
    SIGNAL \PWM_LED:PWMUDB:status_0\ : bit;
    SIGNAL \PWM_LED:PWMUDB:status_3\ : bit;
    SIGNAL \PWM_LED:PWMUDB:tc_i\ : bit;
    SIGNAL \UART:BUART:counter_load_not\ : bit;
    SIGNAL \UART:BUART:pollcount_0\ : bit;
    SIGNAL \UART:BUART:pollcount_1\ : bit;
    SIGNAL \UART:BUART:rx_bitclk_enable\ : bit;
    SIGNAL \UART:BUART:rx_count7_tc\ : bit;
    SIGNAL \UART:BUART:rx_count_0\ : bit;
    SIGNAL \UART:BUART:rx_count_1\ : bit;
    SIGNAL \UART:BUART:rx_count_2\ : bit;
    SIGNAL \UART:BUART:rx_count_3\ : bit;
    SIGNAL \UART:BUART:rx_count_4\ : bit;
    SIGNAL \UART:BUART:rx_count_5\ : bit;
    SIGNAL \UART:BUART:rx_count_6\ : bit;
    SIGNAL \UART:BUART:rx_counter_load\ : bit;
    SIGNAL \UART:BUART:rx_fifofull\ : bit;
    SIGNAL \UART:BUART:rx_fifonotempty\ : bit;
    SIGNAL \UART:BUART:rx_last\ : bit;
    SIGNAL \UART:BUART:rx_load_fifo\ : bit;
    SIGNAL \UART:BUART:rx_postpoll\ : bit;
    SIGNAL \UART:BUART:rx_state_0\ : bit;
    SIGNAL \UART:BUART:rx_state_2\ : bit;
    SIGNAL \UART:BUART:rx_state_3\ : bit;
    SIGNAL \UART:BUART:rx_state_stop1_reg\ : bit;
    SIGNAL \UART:BUART:rx_status_3\ : bit;
    SIGNAL \UART:BUART:rx_status_4\ : bit;
    SIGNAL \UART:BUART:rx_status_5\ : bit;
    SIGNAL \UART:BUART:tx_bitclk\ : bit;
    SIGNAL \UART:BUART:tx_bitclk_enable_pre\ : bit;
    SIGNAL \UART:BUART:tx_counter_dp\ : bit;
    SIGNAL \UART:BUART:tx_ctrl_mark_last\ : bit;
    SIGNAL \UART:BUART:tx_fifo_empty\ : bit;
    SIGNAL \UART:BUART:tx_fifo_notfull\ : bit;
    SIGNAL \UART:BUART:tx_shift_out\ : bit;
    SIGNAL \UART:BUART:tx_state_0\ : bit;
    SIGNAL \UART:BUART:tx_state_1\ : bit;
    SIGNAL \UART:BUART:tx_state_2\ : bit;
    SIGNAL \UART:BUART:tx_status_0\ : bit;
    SIGNAL \UART:BUART:tx_status_2\ : bit;
    SIGNAL \UART:BUART:txn\ : bit;
    SIGNAL \UART:Net_9\ : bit;
    ATTRIBUTE udbclken_assigned OF \UART:Net_9\ : SIGNAL IS "True";
    ATTRIBUTE global_signal OF \UART:Net_9\ : SIGNAL IS true;
    SIGNAL \UART:Net_9_local\ : bit;
    SIGNAL __ONE__ : bit;
    ATTRIBUTE POWER OF __ONE__ : SIGNAL IS true;
    SIGNAL __ZERO__ : bit;
    ATTRIBUTE GROUND OF __ZERO__ : SIGNAL IS true;
    SIGNAL clk_shift : bit;
    ATTRIBUTE global_signal OF clk_shift : SIGNAL IS true;
    SIGNAL clk_shift_local : bit;
    SIGNAL clk_slots : bit;
    ATTRIBUTE global_signal OF clk_slots : SIGNAL IS true;
    SIGNAL clk_slots_local : bit;
    SIGNAL cy_srff_4 : bit;
    SIGNAL cydff_5 : bit;
    SIGNAL cydff_6 : bit;
    SIGNAL cydff_7 : bit;
    SIGNAL cydff_8 : bit;
    SIGNAL cydff_9 : bit;
    SIGNAL dma_ham2ser_trig : bit;
    SIGNAL h0 : bit;
    SIGNAL h1 : bit;
    SIGNAL h2 : bit;
    SIGNAL h3 : bit;
    SIGNAL ham_full : bit;
    SIGNAL ham_full_res : bit;
    SIGNAL pay_en : bit;
    ATTRIBUTE soft OF pay_en : SIGNAL IS 1;
    SIGNAL pay_en_lo : bit;
    SIGNAL pay_loaded : bit;
    SIGNAL pay_shift_hi : bit;
    SIGNAL pay_shift_lo : bit;
    SIGNAL rx_slot0 : bit;
    SIGNAL ser_en : bit;
    ATTRIBUTE soft OF ser_en : SIGNAL IS 1;
    SIGNAL ser_en_lo : bit;
    SIGNAL ser_shift_hi : bit;
    SIGNAL ser_shift_lo : bit;
    SIGNAL symb_inj_done : bit;
    SIGNAL symb_ready : bit;
    SIGNAL \ClockBlock.aclk_glb_ff_0__sig\ : bit;
    ATTRIBUTE lib_model OF Rx_1(0) : LABEL IS "iocell_ireg";
    ATTRIBUTE lib_model OF Pin_2(0) : LABEL IS "iocell1";
    ATTRIBUTE Location OF Pin_2(0) : LABEL IS "P15[1]";
    ATTRIBUTE lib_model OF Pin_3(0) : LABEL IS "iocell2";
    ATTRIBUTE Location OF Pin_3(0) : LABEL IS "P1[5]";
    ATTRIBUTE lib_model OF Pin_4(0) : LABEL IS "iocell3";
    ATTRIBUTE Location OF Pin_4(0) : LABEL IS "P0[0]";
    ATTRIBUTE lib_model OF Pin_5(0) : LABEL IS "iocell4";
    ATTRIBUTE Location OF Pin_5(0) : LABEL IS "P0[3]";
    ATTRIBUTE lib_model OF \ADC_SAR:Bypass(0)\ : LABEL IS "iocell5";
    ATTRIBUTE Location OF \ADC_SAR:Bypass(0)\ : LABEL IS "P0[4]";
    ATTRIBUTE lib_model OF pay_en : LABEL IS "macrocell1";
    ATTRIBUTE lib_model OF pay_shift_hi : LABEL IS "macrocell2";
    ATTRIBUTE lib_model OF pay_shift_lo : LABEL IS "macrocell3";
    ATTRIBUTE lib_model OF Net_174 : LABEL IS "macrocell4";
    ATTRIBUTE lib_model OF dma_ham2ser_trig : LABEL IS "macrocell5";
    ATTRIBUTE lib_model OF ser_en : LABEL IS "macrocell6";
    ATTRIBUTE lib_model OF ser_shift_hi : LABEL IS "macrocell7";
    ATTRIBUTE lib_model OF ser_shift_lo : LABEL IS "macrocell8";
    ATTRIBUTE lib_model OF symb_ready : LABEL IS "macrocell9";
    ATTRIBUTE lib_model OF Net_386 : LABEL IS "macrocell10";
    ATTRIBUTE lib_model OF Net_447 : LABEL IS "macrocell11";
    ATTRIBUTE lib_model OF Net_474 : LABEL IS "macrocell12";
    ATTRIBUTE lib_model OF Net_537 : LABEL IS "macrocell13";
    ATTRIBUTE lib_model OF \UART:BUART:counter_load_not\ : LABEL IS "macrocell14";
    ATTRIBUTE lib_model OF \UART:BUART:tx_status_0\ : LABEL IS "macrocell15";
    ATTRIBUTE lib_model OF \UART:BUART:tx_status_2\ : LABEL IS "macrocell16";
    ATTRIBUTE lib_model OF \UART:BUART:rx_counter_load\ : LABEL IS "macrocell17";
    ATTRIBUTE lib_model OF \UART:BUART:rx_postpoll\ : LABEL IS "macrocell18";
    ATTRIBUTE lib_model OF \UART:BUART:rx_status_4\ : LABEL IS "macrocell19";
    ATTRIBUTE lib_model OF \UART:BUART:rx_status_5\ : LABEL IS "macrocell20";
    ATTRIBUTE lib_model OF rx_slot0 : LABEL IS "macrocell21";
    ATTRIBUTE lib_model OF Net_939 : LABEL IS "macrocell22";
    ATTRIBUTE lib_model OF \CREG_PAY:Sync:ctrl_reg\ : LABEL IS "controlcell1";
    ATTRIBUTE lib_model OF \SREG_HAM_OUT:sts:sts_reg\ : LABEL IS "statuscell1";
    ATTRIBUTE lib_model OF DMA_HAM2SER : LABEL IS "drqcell1";
    ATTRIBUTE lib_model OF \CREG_SER:Sync:ctrl_reg\ : LABEL IS "controlcell2";
    ATTRIBUTE lib_model OF \SREG_SYMB:sts:sts_reg\ : LABEL IS "statuscell2";
    ATTRIBUTE lib_model OF DMA_PAY : LABEL IS "drqcell2";
    ATTRIBUTE lib_model OF \CREG_L:Sync:ctrl_reg\ : LABEL IS "controlcell3";
    ATTRIBUTE lib_model OF \UART:BUART:sTX:TxShifter:u0\ : LABEL IS "datapathcell1";
    ATTRIBUTE lib_model OF \UART:BUART:sTX:sCLOCK:TxBitClkGen\ : LABEL IS "datapathcell2";
    ATTRIBUTE lib_model OF \UART:BUART:sTX:TxSts\ : LABEL IS "statusicell1";
    ATTRIBUTE lib_model OF \UART:BUART:sRX:RxShifter:u0\ : LABEL IS "datapathcell3";
    ATTRIBUTE lib_model OF \UART:BUART:sRX:RxSts\ : LABEL IS "statusicell2";
    ATTRIBUTE lib_model OF \CREG_INJ_DONE:Sync:ctrl_reg\ : LABEL IS "controlcell4";
    ATTRIBUTE lib_model OF \PWM_LED:PWMUDB:genblk8:stsreg\ : LABEL IS "statusicell3";
    ATTRIBUTE lib_model OF \PWM_LED:PWMUDB:sP8:pwmdp:u0\ : LABEL IS "datapathcell4";
    ATTRIBUTE lib_model OF \CREG_RX_SLOTS1:Sync:ctrl_reg\ : LABEL IS "controlcell5";
    ATTRIBUTE lib_model OF \SREG_HEAD:sts:sts_reg\ : LABEL IS "statuscell3";
    ATTRIBUTE Location OF \COMP_SLOW:ctComp\ : LABEL IS "F(Comparator,0)";
    ATTRIBUTE Location OF \COMP_FAST:ctComp\ : LABEL IS "F(Comparator,2)";
    ATTRIBUTE lib_model OF \DAC_SLOW:DMA\ : LABEL IS "drqcell3";
    ATTRIBUTE Location OF \DAC_SLOW:VDAC8:viDAC8\ : LABEL IS "F(VIDAC,3)";
    ATTRIBUTE lib_model OF \DAC_FAST:DMA\ : LABEL IS "drqcell4";
    ATTRIBUTE Location OF \DAC_FAST:VDAC8:viDAC8\ : LABEL IS "F(VIDAC,1)";
    ATTRIBUTE Location OF \ADC_SAR:ADC_SAR\ : LABEL IS "F(SAR,0)";
    ATTRIBUTE lib_model OF DMA_AVG : LABEL IS "drqcell5";
    ATTRIBUTE lib_model OF Net_34_3 : LABEL IS "macrocell23";
    ATTRIBUTE lib_model OF Net_34_2 : LABEL IS "macrocell24";
    ATTRIBUTE lib_model OF Net_34_1 : LABEL IS "macrocell25";
    ATTRIBUTE lib_model OF Net_34_0 : LABEL IS "macrocell26";
    ATTRIBUTE lib_model OF Net_77_2 : LABEL IS "macrocell27";
    ATTRIBUTE lib_model OF Net_77_1 : LABEL IS "macrocell28";
    ATTRIBUTE lib_model OF Net_77_0 : LABEL IS "macrocell29";
    ATTRIBUTE lib_model OF pay_en_lo : LABEL IS "macrocell30";
    ATTRIBUTE lib_model OF Net_146 : LABEL IS "macrocell31";
    ATTRIBUTE lib_model OF Net_142 : LABEL IS "macrocell32";
    ATTRIBUTE lib_model OF Net_209_1 : LABEL IS "macrocell33";
    ATTRIBUTE lib_model OF Net_209_0 : LABEL IS "macrocell34";
    ATTRIBUTE lib_model OF ham_full : LABEL IS "macrocell35";
    ATTRIBUTE lib_model OF Net_280_2 : LABEL IS "macrocell36";
    ATTRIBUTE lib_model OF Net_280_1 : LABEL IS "macrocell37";
    ATTRIBUTE lib_model OF Net_280_0 : LABEL IS "macrocell38";
    ATTRIBUTE lib_model OF cydff_5 : LABEL IS "macrocell39";
    ATTRIBUTE lib_model OF cydff_6 : LABEL IS "macrocell40";
    ATTRIBUTE lib_model OF cydff_7 : LABEL IS "macrocell41";
    ATTRIBUTE lib_model OF cydff_8 : LABEL IS "macrocell42";
    ATTRIBUTE lib_model OF cydff_9 : LABEL IS "macrocell43";
    ATTRIBUTE lib_model OF ser_en_lo : LABEL IS "macrocell44";
    ATTRIBUTE lib_model OF Net_420_2 : LABEL IS "macrocell45";
    ATTRIBUTE lib_model OF Net_420_1 : LABEL IS "macrocell46";
    ATTRIBUTE lib_model OF Net_420_0 : LABEL IS "macrocell47";
    ATTRIBUTE lib_model OF cy_srff_4 : LABEL IS "macrocell48";
    ATTRIBUTE lib_model OF Net_485_4 : LABEL IS "macrocell49";
    ATTRIBUTE lib_model OF Net_485_3 : LABEL IS "macrocell50";
    ATTRIBUTE lib_model OF Net_485_2 : LABEL IS "macrocell51";
    ATTRIBUTE lib_model OF Net_485_1 : LABEL IS "macrocell52";
    ATTRIBUTE lib_model OF Net_485_0 : LABEL IS "macrocell53";
    ATTRIBUTE lib_model OF \UART:BUART:txn\ : LABEL IS "macrocell54";
    ATTRIBUTE lib_model OF \UART:BUART:tx_state_1\ : LABEL IS "macrocell55";
    ATTRIBUTE lib_model OF \UART:BUART:tx_state_0\ : LABEL IS "macrocell56";
    ATTRIBUTE lib_model OF \UART:BUART:tx_state_2\ : LABEL IS "macrocell57";
    ATTRIBUTE lib_model OF \UART:BUART:tx_bitclk\ : LABEL IS "macrocell58";
    ATTRIBUTE lib_model OF \UART:BUART:tx_ctrl_mark_last\ : LABEL IS "macrocell59";
    ATTRIBUTE lib_model OF \UART:BUART:rx_state_0\ : LABEL IS "macrocell60";
    ATTRIBUTE lib_model OF \UART:BUART:rx_load_fifo\ : LABEL IS "macrocell61";
    ATTRIBUTE lib_model OF \UART:BUART:rx_state_3\ : LABEL IS "macrocell62";
    ATTRIBUTE lib_model OF \UART:BUART:rx_state_2\ : LABEL IS "macrocell63";
    ATTRIBUTE lib_model OF \UART:BUART:rx_bitclk_enable\ : LABEL IS "macrocell64";
    ATTRIBUTE lib_model OF \UART:BUART:rx_state_stop1_reg\ : LABEL IS "macrocell65";
    ATTRIBUTE lib_model OF \UART:BUART:pollcount_1\ : LABEL IS "macrocell66";
    ATTRIBUTE lib_model OF \UART:BUART:pollcount_0\ : LABEL IS "macrocell67";
    ATTRIBUTE lib_model OF \UART:BUART:rx_status_3\ : LABEL IS "macrocell68";
    ATTRIBUTE lib_model OF \UART:BUART:rx_last\ : LABEL IS "macrocell69";
    ATTRIBUTE lib_model OF \PWM_LED:PWMUDB:prevCompare1\ : LABEL IS "macrocell70";
    ATTRIBUTE lib_model OF \PWM_LED:PWMUDB:status_0\ : LABEL IS "macrocell71";
    ATTRIBUTE lib_model OF Net_617 : LABEL IS "macrocell72";
    ATTRIBUTE lib_model OF symb_inj_done : LABEL IS "macrocell73";
    ATTRIBUTE lib_model OF h3 : LABEL IS "macrocell74";
    ATTRIBUTE lib_model OF h2 : LABEL IS "macrocell75";
    ATTRIBUTE lib_model OF h1 : LABEL IS "macrocell76";
    ATTRIBUTE lib_model OF h0 : LABEL IS "macrocell77";
    ATTRIBUTE lib_model OF Net_758 : LABEL IS "macrocell78";
    ATTRIBUTE lib_model OF Net_759 : LABEL IS "macrocell79";
    ATTRIBUTE lib_model OF Net_760 : LABEL IS "macrocell80";
    ATTRIBUTE lib_model OF Net_761 : LABEL IS "macrocell81";
    ATTRIBUTE lib_model OF Net_923_2 : LABEL IS "macrocell82";
    COMPONENT clockblockcell
        PORT (
            dclk_0 : OUT std_ulogic;
            dclk_1 : OUT std_ulogic;
            dclk_2 : OUT std_ulogic;
            dclk_3 : OUT std_ulogic;
            dclk_4 : OUT std_ulogic;
            dclk_5 : OUT std_ulogic;
            dclk_6 : OUT std_ulogic;
            dclk_7 : OUT std_ulogic;
            dclk_glb_0 : OUT std_ulogic;
            dclk_glb_1 : OUT std_ulogic;
            dclk_glb_2 : OUT std_ulogic;
            dclk_glb_3 : OUT std_ulogic;
            dclk_glb_4 : OUT std_ulogic;
            dclk_glb_5 : OUT std_ulogic;
            dclk_glb_6 : OUT std_ulogic;
            dclk_glb_7 : OUT std_ulogic;
            aclk_0 : OUT std_ulogic;
            aclk_1 : OUT std_ulogic;
            aclk_2 : OUT std_ulogic;
            aclk_3 : OUT std_ulogic;
            aclk_glb_0 : OUT std_ulogic;
            aclk_glb_1 : OUT std_ulogic;
            aclk_glb_2 : OUT std_ulogic;
            aclk_glb_3 : OUT std_ulogic;
            clk_a_dig_0 : OUT std_ulogic;
            clk_a_dig_1 : OUT std_ulogic;
            clk_a_dig_2 : OUT std_ulogic;
            clk_a_dig_3 : OUT std_ulogic;
            clk_a_dig_glb_0 : OUT std_ulogic;
            clk_a_dig_glb_1 : OUT std_ulogic;
            clk_a_dig_glb_2 : OUT std_ulogic;
            clk_a_dig_glb_3 : OUT std_ulogic;
            clk_bus : OUT std_ulogic;
            clk_bus_glb : OUT std_ulogic;
            clk_sync : OUT std_ulogic;
            clk_32k_xtal : OUT std_ulogic;
            clk_100k : OUT std_ulogic;
            clk_32k : OUT std_ulogic;
            clk_1k : OUT std_ulogic;
            clk_usb : OUT std_ulogic;
            xmhz_xerr : OUT std_ulogic;
            pll_lock_out : OUT std_ulogic;
            dsi_dig_div_0 : IN std_ulogic;
            dsi_dig_div_1 : IN std_ulogic;
            dsi_dig_div_2 : IN std_ulogic;
            dsi_dig_div_3 : IN std_ulogic;
            dsi_dig_div_4 : IN std_ulogic;
            dsi_dig_div_5 : IN std_ulogic;
            dsi_dig_div_6 : IN std_ulogic;
            dsi_dig_div_7 : IN std_ulogic;
            dsi_ana_div_0 : IN std_ulogic;
            dsi_ana_div_1 : IN std_ulogic;
            dsi_ana_div_2 : IN std_ulogic;
            dsi_ana_div_3 : IN std_ulogic;
            dsi_glb_div : IN std_ulogic;
            dsi_clkin_div : IN std_ulogic;
            imo : OUT std_ulogic;
            ilo : OUT std_ulogic;
            xtal : OUT std_ulogic;
            pllout : OUT std_ulogic;
            clk_bus_glb_ff : OUT std_ulogic;
            aclk_glb_ff_0 : OUT std_ulogic;
            clk_a_dig_glb_ff_0 : OUT std_ulogic;
            aclk_glb_ff_1 : OUT std_ulogic;
            clk_a_dig_glb_ff_1 : OUT std_ulogic;
            aclk_glb_ff_2 : OUT std_ulogic;
            clk_a_dig_glb_ff_2 : OUT std_ulogic;
            aclk_glb_ff_3 : OUT std_ulogic;
            clk_a_dig_glb_ff_3 : OUT std_ulogic;
            dclk_glb_ff_0 : OUT std_ulogic;
            dclk_glb_ff_1 : OUT std_ulogic;
            dclk_glb_ff_2 : OUT std_ulogic;
            dclk_glb_ff_3 : OUT std_ulogic;
            dclk_glb_ff_4 : OUT std_ulogic;
            dclk_glb_ff_5 : OUT std_ulogic;
            dclk_glb_ff_6 : OUT std_ulogic;
            dclk_glb_ff_7 : OUT std_ulogic);
    END COMPONENT;
    COMPONENT comparatorcell
        PORT (
            out : OUT std_ulogic;
            clk_udb : IN std_ulogic;
            clock : IN std_ulogic);
    END COMPONENT;
    COMPONENT controlcell
        PORT (
            control_0 : OUT std_ulogic;
            control_1 : OUT std_ulogic;
            control_2 : OUT std_ulogic;
            control_3 : OUT std_ulogic;
            control_4 : OUT std_ulogic;
            control_5 : OUT std_ulogic;
            control_6 : OUT std_ulogic;
            control_7 : OUT std_ulogic;
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            clk_en : IN std_ulogic;
            busclk : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF controlcell : COMPONENT IS "clock";
    ATTRIBUTE udb_clken OF controlcell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF controlcell : COMPONENT IS "reset";
    COMPONENT count7cell
        PORT (
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            load : IN std_ulogic;
            enable : IN std_ulogic;
            clk_en : IN std_ulogic;
            count_0 : OUT std_ulogic;
            count_1 : OUT std_ulogic;
            count_2 : OUT std_ulogic;
            count_3 : OUT std_ulogic;
            count_4 : OUT std_ulogic;
            count_5 : OUT std_ulogic;
            count_6 : OUT std_ulogic;
            tc : OUT std_ulogic;
            clock_n : IN std_ulogic;
            extclk : IN std_ulogic;
            extclk_n : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF count7cell : COMPONENT IS "clock,clock_n,extclk,extclk_n";
    ATTRIBUTE udb_clken OF count7cell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF count7cell : COMPONENT IS "reset";
    COMPONENT datapathcell
        PORT (
            clock : IN std_ulogic;
            clk_en : IN std_ulogic;
            reset : IN std_ulogic;
            cs_addr_0 : IN std_ulogic;
            cs_addr_1 : IN std_ulogic;
            cs_addr_2 : IN std_ulogic;
            route_si : IN std_ulogic;
            route_ci : IN std_ulogic;
            f0_load : IN std_ulogic;
            f1_load : IN std_ulogic;
            d0_load : IN std_ulogic;
            d1_load : IN std_ulogic;
            ce0_reg : OUT std_ulogic;
            cl0_reg : OUT std_ulogic;
            z0_reg : OUT std_ulogic;
            f0_reg : OUT std_ulogic;
            ce1_reg : OUT std_ulogic;
            cl1_reg : OUT std_ulogic;
            z1_reg : OUT std_ulogic;
            f1_reg : OUT std_ulogic;
            ov_msb_reg : OUT std_ulogic;
            co_msb_reg : OUT std_ulogic;
            cmsb_reg : OUT std_ulogic;
            so_reg : OUT std_ulogic;
            f0_bus_stat_reg : OUT std_ulogic;
            f0_blk_stat_reg : OUT std_ulogic;
            f1_bus_stat_reg : OUT std_ulogic;
            f1_blk_stat_reg : OUT std_ulogic;
            ce0_comb : OUT std_ulogic;
            cl0_comb : OUT std_ulogic;
            z0_comb : OUT std_ulogic;
            f0_comb : OUT std_ulogic;
            ce1_comb : OUT std_ulogic;
            cl1_comb : OUT std_ulogic;
            z1_comb : OUT std_ulogic;
            f1_comb : OUT std_ulogic;
            ov_msb_comb : OUT std_ulogic;
            co_msb_comb : OUT std_ulogic;
            cmsb_comb : OUT std_ulogic;
            so_comb : OUT std_ulogic;
            f0_bus_stat_comb : OUT std_ulogic;
            f0_blk_stat_comb : OUT std_ulogic;
            f1_bus_stat_comb : OUT std_ulogic;
            f1_blk_stat_comb : OUT std_ulogic;
            ce0 : OUT std_ulogic;
            ce0i : IN std_ulogic;
            p_in_0 : IN std_ulogic;
            p_in_1 : IN std_ulogic;
            p_in_2 : IN std_ulogic;
            p_in_3 : IN std_ulogic;
            p_in_4 : IN std_ulogic;
            p_in_5 : IN std_ulogic;
            p_in_6 : IN std_ulogic;
            p_in_7 : IN std_ulogic;
            p_out_0 : OUT std_ulogic;
            p_out_1 : OUT std_ulogic;
            p_out_2 : OUT std_ulogic;
            p_out_3 : OUT std_ulogic;
            p_out_4 : OUT std_ulogic;
            p_out_5 : OUT std_ulogic;
            p_out_6 : OUT std_ulogic;
            p_out_7 : OUT std_ulogic;
            cl0i : IN std_ulogic;
            cl0 : OUT std_ulogic;
            z0i : IN std_ulogic;
            z0 : OUT std_ulogic;
            ff0i : IN std_ulogic;
            ff0 : OUT std_ulogic;
            ce1i : IN std_ulogic;
            ce1 : OUT std_ulogic;
            cl1i : IN std_ulogic;
            cl1 : OUT std_ulogic;
            z1i : IN std_ulogic;
            z1 : OUT std_ulogic;
            ff1i : IN std_ulogic;
            ff1 : OUT std_ulogic;
            cap0i : IN std_ulogic;
            cap0 : OUT std_ulogic;
            cap1i : IN std_ulogic;
            cap1 : OUT std_ulogic;
            ci : IN std_ulogic;
            co_msb : OUT std_ulogic;
            sir : IN std_ulogic;
            sol_msb : OUT std_ulogic;
            cfbi : IN std_ulogic;
            cfbo : OUT std_ulogic;
            sil : IN std_ulogic;
            sor : OUT std_ulogic;
            cmsbi : IN std_ulogic;
            cmsbo : OUT std_ulogic;
            busclk : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF datapathcell : COMPONENT IS "clock";
    ATTRIBUTE udb_clken OF datapathcell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF datapathcell : COMPONENT IS "reset";
    ATTRIBUTE udb_chain OF datapathcell : COMPONENT IS "ce0i,ce0,cl0i,cl0,z0i,z0,ff0i,ff0,ce1i,ce1,cl1i,cl1,z1i,z1,ff1i,ff1,cap0i,cap0,cap1i,cap1,ci,co_msb,sir,sol_msb,cfbi,cfbo,sil,sor,cmsbi,cmsbo";
    ATTRIBUTE chain_lsb OF datapathcell : COMPONENT IS "ce0i,cl0i,z0i,ff0i,ce1i,cl1i,z1i,ff1i,cap0i,cap1i,ci,sir,cfbi,sor,cmsbo";
    ATTRIBUTE chain_msb OF datapathcell : COMPONENT IS "ce0,cl0,z0,ff0,ce1,cl1,z1,ff1,cap0,cap1,co_msb,sol_msb,cfbo,sil,cmsbi";
    COMPONENT drqcell
        PORT (
            dmareq : IN std_ulogic;
            termin : IN std_ulogic;
            termout : OUT std_ulogic;
            interrupt : OUT std_ulogic;
            clock : IN std_ulogic);
    END COMPONENT;
    COMPONENT interrupt
        PORT (
            interrupt : IN std_ulogic;
            clock : IN std_ulogic);
    END COMPONENT;
    COMPONENT iocell
        PORT (
            pin_input : IN std_ulogic;
            oe : IN std_ulogic;
            fb : OUT std_ulogic;
            pad_in : IN std_ulogic;
            pa_out : OUT std_ulogic;
            pad_out : OUT std_ulogic;
            oe_reg : OUT std_ulogic;
            oe_internal : IN std_ulogic;
            in_clock : IN std_ulogic;
            in_clock_en : IN std_ulogic;
            in_reset : IN std_ulogic;
            out_clock : IN std_ulogic;
            out_clock_en : IN std_ulogic;
            out_reset : IN std_ulogic);
    END COMPONENT;
    COMPONENT logicalport
        PORT (
            interrupt : OUT std_ulogic;
            precharge : IN std_ulogic;
            in_clock : IN std_ulogic;
            in_clock_en : IN std_ulogic;
            in_reset : IN std_ulogic;
            out_clock : IN std_ulogic;
            out_clock_en : IN std_ulogic;
            out_reset : IN std_ulogic);
    END COMPONENT;
    COMPONENT macrocell
        PORT (
            main_0 : IN std_ulogic;
            main_1 : IN std_ulogic;
            main_2 : IN std_ulogic;
            main_3 : IN std_ulogic;
            main_4 : IN std_ulogic;
            main_5 : IN std_ulogic;
            main_6 : IN std_ulogic;
            main_7 : IN std_ulogic;
            main_8 : IN std_ulogic;
            main_9 : IN std_ulogic;
            main_10 : IN std_ulogic;
            main_11 : IN std_ulogic;
            ar_0 : IN std_ulogic;
            ap_0 : IN std_ulogic;
            clock_0 : IN std_ulogic;
            clk_en : IN std_ulogic;
            cin : IN std_ulogic;
            cpt0_0 : IN std_ulogic;
            cpt0_1 : IN std_ulogic;
            cpt0_2 : IN std_ulogic;
            cpt0_3 : IN std_ulogic;
            cpt0_4 : IN std_ulogic;
            cpt0_5 : IN std_ulogic;
            cpt0_6 : IN std_ulogic;
            cpt0_7 : IN std_ulogic;
            cpt0_8 : IN std_ulogic;
            cpt0_9 : IN std_ulogic;
            cpt0_10 : IN std_ulogic;
            cpt0_11 : IN std_ulogic;
            cpt1_0 : IN std_ulogic;
            cpt1_1 : IN std_ulogic;
            cpt1_2 : IN std_ulogic;
            cpt1_3 : IN std_ulogic;
            cpt1_4 : IN std_ulogic;
            cpt1_5 : IN std_ulogic;
            cpt1_6 : IN std_ulogic;
            cpt1_7 : IN std_ulogic;
            cpt1_8 : IN std_ulogic;
            cpt1_9 : IN std_ulogic;
            cpt1_10 : IN std_ulogic;
            cpt1_11 : IN std_ulogic;
            cout : OUT std_ulogic;
            q : OUT std_ulogic;
            q_fixed : OUT std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF macrocell : COMPONENT IS "clock_0";
    ATTRIBUTE udb_clken OF macrocell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF macrocell : COMPONENT IS "ar_0";
    ATTRIBUTE udb_preset OF macrocell : COMPONENT IS "ap_0";
    ATTRIBUTE udb_chain OF macrocell : COMPONENT IS "cin,cout";
    ATTRIBUTE chain_lsb OF macrocell : COMPONENT IS "cin";
    ATTRIBUTE chain_msb OF macrocell : COMPONENT IS "cout";
    COMPONENT sarcell
        PORT (
            clock : IN std_ulogic;
            pump_clock : IN std_ulogic;
            clk_udb : IN std_ulogic;
            sof_udb : IN std_ulogic;
            vp_ctl_udb_0 : IN std_ulogic;
            vp_ctl_udb_1 : IN std_ulogic;
            vp_ctl_udb_2 : IN std_ulogic;
            vp_ctl_udb_3 : IN std_ulogic;
            vn_ctl_udb_0 : IN std_ulogic;
            vn_ctl_udb_1 : IN std_ulogic;
            vn_ctl_udb_2 : IN std_ulogic;
            vn_ctl_udb_3 : IN std_ulogic;
            data_out_udb_0 : OUT std_ulogic;
            data_out_udb_1 : OUT std_ulogic;
            data_out_udb_2 : OUT std_ulogic;
            data_out_udb_3 : OUT std_ulogic;
            data_out_udb_4 : OUT std_ulogic;
            data_out_udb_5 : OUT std_ulogic;
            data_out_udb_6 : OUT std_ulogic;
            data_out_udb_7 : OUT std_ulogic;
            data_out_udb_8 : OUT std_ulogic;
            data_out_udb_9 : OUT std_ulogic;
            data_out_udb_10 : OUT std_ulogic;
            data_out_udb_11 : OUT std_ulogic;
            eof_udb : OUT std_ulogic;
            irq : OUT std_ulogic;
            next : OUT std_ulogic);
    END COMPONENT;
    COMPONENT statuscell
        PORT (
            status_0 : IN std_ulogic;
            status_1 : IN std_ulogic;
            status_2 : IN std_ulogic;
            status_3 : IN std_ulogic;
            status_4 : IN std_ulogic;
            status_5 : IN std_ulogic;
            status_6 : IN std_ulogic;
            status_7 : IN std_ulogic;
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            clk_en : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF statuscell : COMPONENT IS "clock";
    ATTRIBUTE udb_clken OF statuscell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF statuscell : COMPONENT IS "reset";
    COMPONENT statusicell
        PORT (
            status_0 : IN std_ulogic;
            status_1 : IN std_ulogic;
            status_2 : IN std_ulogic;
            status_3 : IN std_ulogic;
            status_4 : IN std_ulogic;
            status_5 : IN std_ulogic;
            status_6 : IN std_ulogic;
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            interrupt : OUT std_ulogic;
            clk_en : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF statusicell : COMPONENT IS "clock";
    ATTRIBUTE udb_clken OF statusicell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF statusicell : COMPONENT IS "reset";
    COMPONENT vidaccell
        PORT (
            data_0 : IN std_ulogic;
            data_1 : IN std_ulogic;
            data_2 : IN std_ulogic;
            data_3 : IN std_ulogic;
            data_4 : IN std_ulogic;
            data_5 : IN std_ulogic;
            data_6 : IN std_ulogic;
            data_7 : IN std_ulogic;
            strobe : IN std_ulogic;
            strobe_udb : IN std_ulogic;
            reset : IN std_ulogic;
            idir : IN std_ulogic;
            ioff : IN std_ulogic);
    END COMPONENT;
BEGIN

    ClockBlock:clockblockcell
        PORT MAP(
            imo => ClockBlock_IMO,
            pllout => ClockBlock_PLL_OUT,
            ilo => ClockBlock_ILO,
            clk_100k => ClockBlock_100k,
            clk_1k => ClockBlock_1k,
            clk_32k => ClockBlock_32k,
            xtal => ClockBlock_XTAL,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ,
            clk_sync => ClockBlock_MASTER_CLK,
            clk_bus_glb => ClockBlock_BUS_CLK,
            clk_bus => ClockBlock_BUS_CLK_local,
            dsi_clkin_div => open,
            dsi_glb_div => open,
            aclk_glb_0 => \ADC_SAR:Net_385\,
            aclk_0 => \ADC_SAR:Net_385_local\,
            clk_a_dig_glb_0 => \ADC_SAR:Net_381\,
            clk_a_dig_0 => \ADC_SAR:Net_381_local\,
            dclk_glb_0 => \UART:Net_9\,
            dclk_0 => \UART:Net_9_local\,
            dclk_glb_1 => clk_shift,
            dclk_1 => clk_shift_local,
            dclk_glb_2 => \DAC_SLOW:Net_12\,
            dclk_2 => \DAC_SLOW:Net_12_local\,
            dclk_glb_3 => \DAC_FAST:Net_12\,
            dclk_3 => \DAC_FAST:Net_12_local\,
            dclk_glb_4 => clk_slots,
            dclk_4 => clk_slots_local,
            aclk_glb_ff_0 => \ClockBlock.aclk_glb_ff_0__sig\);

    Rx_1:logicalport
        GENERIC MAP(
            drive_mode => "001",
            ibuf_enabled => "1",
            id => "1425177d-0d0e-4468-8bcc-e638e5509a9b",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "I",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "00",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open,
            in_clock => open);

    Rx_1(0):iocell
        GENERIC MAP(
            in_sync_mode => 2,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "Rx_1",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000101")
        PORT MAP(
            pa_out => Rx_1(0)__PA,
            oe => open,
            fb => Net_542,
            pad_in => Rx_1(0)_PAD,
            in_clock => ClockBlock_BUS_CLK,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    Tx_1:logicalport
        GENERIC MAP(
            drive_mode => "110",
            ibuf_enabled => "1",
            id => "ed092b9b-d398-4703-be89-cebf998501f6",
            init_dr_st => "1",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "1",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "O",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    Tx_1(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "Tx_1",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000101")
        PORT MAP(
            pa_out => Tx_1(0)__PA,
            oe => open,
            pin_input => Net_537,
            pad_out => Tx_1(0)_PAD,
            pad_in => Tx_1(0)_PAD,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    Pin_1:logicalport
        GENERIC MAP(
            drive_mode => "110",
            ibuf_enabled => "1",
            id => "e851a3b9-efb8-48be-bbb8-b303b216c393",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "1",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "O",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    Pin_1(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "Pin_1",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000101")
        PORT MAP(
            pa_out => Pin_1(0)__PA,
            oe => open,
            pin_input => Net_617,
            pad_out => Pin_1(0)_PAD,
            pad_in => Pin_1(0)_PAD,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    Pin_2:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "77715107-f8d5-47e5-a629-0fb83101ac6b",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    Pin_2(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "Pin_2",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => Pin_2(0)__PA,
            oe => open,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    Pin_3:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "d49052a1-abcf-496d-89b0-66851286d2e2",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    Pin_3(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "Pin_3",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => Pin_3(0)__PA,
            oe => open,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    Pin_4:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "8bf766a8-88f1-40c4-8f54-cd5001c5987a",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    Pin_4(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "Pin_4",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => Pin_4(0)__PA,
            oe => open,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    Pin_5:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "32cbcf25-d3bd-4efd-9daf-6ccb421b8976",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    Pin_5(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "Pin_5",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => Pin_5(0)__PA,
            oe => open,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    \ADC_SAR:Bypass\:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "e8f8791c-bcc2-492e-963b-6870e5dbe76c/16a808f6-2e13-45b9-bce0-b001c8655113",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    \ADC_SAR:Bypass(0)\:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "\ADC_SAR:Bypass\",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => \\\ADC_SAR:Bypass(0)\\__PA\,
            oe => open,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    pay_en:macrocell
        GENERIC MAP(
            soft => 1,
            eqn_main => "(!main_0 * !main_1 * !main_2 * !main_3 * !main_4)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => pay_en,
            main_0 => Net_34_3,
            main_1 => Net_34_2,
            main_2 => Net_34_1,
            main_3 => Net_34_0,
            main_4 => ham_full);

    pay_shift_hi:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => pay_shift_hi,
            main_0 => pay_en,
            main_1 => clk_shift_local);

    pay_shift_lo:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => pay_shift_lo,
            main_0 => pay_en,
            main_1 => pay_en_lo,
            main_2 => clk_shift_local);

    Net_174:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => Net_174,
            main_0 => Net_146,
            main_1 => Net_142);

    dma_ham2ser_trig:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * main_3 * main_4 * !main_5 * !main_6 * !main_7)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => dma_ham2ser_trig,
            main_0 => Net_34_3,
            main_1 => Net_34_2,
            main_2 => Net_34_1,
            main_3 => Net_34_0,
            main_4 => ham_full,
            main_5 => Net_280_2,
            main_6 => Net_280_1,
            main_7 => Net_280_0);

    ser_en:macrocell
        GENERIC MAP(
            soft => 1,
            eqn_main => "(!main_0 * !main_1 * main_2 * !main_3 * !main_4)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => ser_en,
            main_0 => Net_34_3,
            main_1 => Net_34_2,
            main_2 => Net_34_1,
            main_3 => Net_34_0,
            main_4 => ham_full);

    ser_shift_hi:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => ser_shift_hi,
            main_0 => ser_en,
            main_1 => clk_shift_local);

    ser_shift_lo:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => ser_shift_lo,
            main_0 => ser_en,
            main_1 => ser_en_lo,
            main_2 => clk_shift_local);

    symb_ready:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => symb_ready,
            main_0 => Net_420_2,
            main_1 => Net_420_1,
            main_2 => Net_420_0);

    Net_386:macrocell
        GENERIC MAP(
            soft => 1,
            eqn_main => "(!main_0 * main_3) + (main_0 * !main_3) + (!main_1 * main_4) + (main_1 * !main_4) + (!main_2 * main_5) + (main_2 * !main_5)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => Net_386,
            main_0 => Net_404_2,
            main_1 => Net_404_1,
            main_2 => Net_404_0,
            main_3 => Net_420_2,
            main_4 => Net_420_1,
            main_5 => Net_420_0);

    Net_447:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => Net_447,
            main_0 => Net_77_2,
            main_1 => Net_77_1,
            main_2 => Net_77_0);

    Net_474:macrocell
        GENERIC MAP(
            soft => 1,
            eqn_main => "(main_0 * !main_1 * !main_2 * main_3 * main_4)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => Net_474,
            main_0 => Net_485_4,
            main_1 => Net_485_3,
            main_2 => Net_485_2,
            main_3 => Net_485_1,
            main_4 => Net_485_0);

    Net_537:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => Net_537,
            main_0 => \UART:BUART:txn\);

    \UART:BUART:counter_load_not\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2) + (!main_0 * !main_1 * !main_3)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:counter_load_not\,
            main_0 => \UART:BUART:tx_state_1\,
            main_1 => \UART:BUART:tx_state_0\,
            main_2 => \UART:BUART:tx_bitclk_enable_pre\,
            main_3 => \UART:BUART:tx_state_2\);

    \UART:BUART:tx_status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * main_3 * main_4)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:tx_status_0\,
            main_0 => \UART:BUART:tx_state_1\,
            main_1 => \UART:BUART:tx_state_0\,
            main_2 => \UART:BUART:tx_bitclk_enable_pre\,
            main_3 => \UART:BUART:tx_fifo_empty\,
            main_4 => \UART:BUART:tx_state_2\);

    \UART:BUART:tx_status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:tx_status_2\,
            main_0 => \UART:BUART:tx_fifo_notfull\);

    \UART:BUART:rx_counter_load\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * !main_3)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_counter_load\,
            main_0 => \UART:BUART:tx_ctrl_mark_last\,
            main_1 => \UART:BUART:rx_state_0\,
            main_2 => \UART:BUART:rx_state_3\,
            main_3 => \UART:BUART:rx_state_2\);

    \UART:BUART:rx_postpoll\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0) + (main_1 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_postpoll\,
            main_0 => \UART:BUART:pollcount_1\,
            main_1 => Net_542,
            main_2 => \UART:BUART:pollcount_0\);

    \UART:BUART:rx_status_4\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_status_4\,
            main_0 => \UART:BUART:rx_load_fifo\,
            main_1 => \UART:BUART:rx_fifofull\);

    \UART:BUART:rx_status_5\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_status_5\,
            main_0 => \UART:BUART:rx_fifonotempty\,
            main_1 => \UART:BUART:rx_state_stop1_reg\);

    rx_slot0:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * !main_3)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => rx_slot0,
            main_0 => Net_827_3,
            main_1 => Net_827_2,
            main_2 => Net_827_1,
            main_3 => Net_827_0);

    Net_939:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => Net_939,
            main_0 => Net_923_2);

    \CREG_PAY:Sync:ctrl_reg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "00000000",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clken_mode => 1)
        PORT MAP(
            control_7 => Net_64,
            control_6 => Net_63,
            control_5 => Net_62,
            control_4 => Net_61,
            control_3 => Net_59,
            control_2 => Net_58,
            control_1 => Net_57,
            control_0 => Net_60,
            busclk => ClockBlock_BUS_CLK);

    \SREG_HAM_OUT:sts:sts_reg\:statuscell
        GENERIC MAP(
            cy_force_order => 1,
            cy_md_select => "00000000",
            clken_mode => 1)
        PORT MAP(
            clock => open,
            status_7 => open,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => open,
            status_2 => open,
            status_1 => Net_174,
            status_0 => open);

    DMA_HAM2SER:drqcell
        GENERIC MAP(
            drq_type => "00",
            num_tds => 0)
        PORT MAP(
            dmareq => dma_ham2ser_trig,
            termin => '0',
            termout => ham_full_res,
            clock => ClockBlock_BUS_CLK);

    \CREG_SER:Sync:ctrl_reg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "00000000",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clken_mode => 1)
        PORT MAP(
            control_7 => Net_262,
            control_6 => Net_261,
            control_5 => Net_260,
            control_4 => Net_259,
            control_3 => Net_257,
            control_2 => Net_256,
            control_1 => Net_255,
            control_0 => Net_258,
            busclk => ClockBlock_BUS_CLK);

    \SREG_SYMB:sts:sts_reg\:statuscell
        GENERIC MAP(
            cy_force_order => 1,
            cy_md_select => "00000000",
            clken_mode => 1)
        PORT MAP(
            clock => open,
            status_7 => open,
            status_6 => open,
            status_5 => open,
            status_4 => cydff_9,
            status_3 => cydff_8,
            status_2 => cydff_7,
            status_1 => cydff_6,
            status_0 => cydff_5);

    DMA_PAY:drqcell
        GENERIC MAP(
            drq_type => "00",
            num_tds => 0)
        PORT MAP(
            dmareq => Net_447,
            termin => '0',
            termout => pay_loaded,
            clock => ClockBlock_BUS_CLK);

    \CREG_L:Sync:ctrl_reg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "00000000",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clken_mode => 1)
        PORT MAP(
            control_7 => \CREG_L:control_7\,
            control_6 => \CREG_L:control_6\,
            control_5 => \CREG_L:control_5\,
            control_4 => \CREG_L:control_4\,
            control_3 => \CREG_L:control_3\,
            control_2 => Net_404_2,
            control_1 => Net_404_1,
            control_0 => Net_404_0,
            busclk => ClockBlock_BUS_CLK);

    ISR_SYMB:interrupt
        GENERIC MAP(
            int_type => "00",
            is_nmi => 0)
        PORT MAP(
            interrupt => symb_ready,
            clock => ClockBlock_BUS_CLK);

    ISR_INJ_CHECK:interrupt
        GENERIC MAP(
            int_type => "00",
            is_nmi => 0)
        PORT MAP(
            interrupt => cy_srff_4,
            clock => ClockBlock_BUS_CLK);

    \UART:BUART:sTX:TxShifter:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            reset => open,
            clock => \UART:Net_9\,
            cs_addr_2 => \UART:BUART:tx_state_1\,
            cs_addr_1 => \UART:BUART:tx_state_0\,
            cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\,
            so_comb => \UART:BUART:tx_shift_out\,
            f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\,
            f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\,
            busclk => ClockBlock_BUS_CLK);

    \UART:BUART:sTX:sCLOCK:TxBitClkGen\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            reset => open,
            clock => \UART:Net_9\,
            cs_addr_0 => \UART:BUART:counter_load_not\,
            ce0_reg => \UART:BUART:tx_bitclk_enable_pre\,
            ce1_reg => \UART:BUART:tx_counter_dp\,
            busclk => ClockBlock_BUS_CLK);

    \UART:BUART:sTX:TxSts\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0000001",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            reset => open,
            clock => \UART:Net_9\,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \UART:BUART:tx_fifo_notfull\,
            status_2 => \UART:BUART:tx_status_2\,
            status_1 => \UART:BUART:tx_fifo_empty\,
            status_0 => \UART:BUART:tx_status_0\);

    \UART:BUART:sRX:RxShifter:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            reset => open,
            clock => \UART:Net_9\,
            cs_addr_2 => \UART:BUART:tx_ctrl_mark_last\,
            cs_addr_1 => \UART:BUART:rx_state_0\,
            cs_addr_0 => \UART:BUART:rx_bitclk_enable\,
            route_si => \UART:BUART:rx_postpoll\,
            f0_load => \UART:BUART:rx_load_fifo\,
            f0_bus_stat_comb => \UART:BUART:rx_fifonotempty\,
            f0_blk_stat_comb => \UART:BUART:rx_fifofull\,
            busclk => ClockBlock_BUS_CLK);

    \UART:BUART:sRX:RxBitCounter\:count7cell
        GENERIC MAP(
            cy_alt_mode => 0,
            cy_init_value => "0000000",
            cy_period => "1110010",
            cy_route_en => 1,
            cy_route_ld => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => \UART:Net_9\,
            reset => open,
            load => \UART:BUART:rx_counter_load\,
            enable => open,
            count_6 => \UART:BUART:rx_count_6\,
            count_5 => \UART:BUART:rx_count_5\,
            count_4 => \UART:BUART:rx_count_4\,
            count_3 => \UART:BUART:rx_count_3\,
            count_2 => \UART:BUART:rx_count_2\,
            count_1 => \UART:BUART:rx_count_1\,
            count_0 => \UART:BUART:rx_count_0\,
            tc => \UART:BUART:rx_count7_tc\);

    \UART:BUART:sRX:RxSts\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "1011111",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            reset => open,
            clock => \UART:Net_9\,
            status_6 => open,
            status_5 => \UART:BUART:rx_status_5\,
            status_4 => \UART:BUART:rx_status_4\,
            status_3 => \UART:BUART:rx_status_3\,
            status_2 => open,
            status_1 => open,
            status_0 => open);

    \CREG_INJ_DONE:Sync:ctrl_reg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "00000000",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clken_mode => 1)
        PORT MAP(
            control_7 => \CREG_INJ_DONE:control_7\,
            control_6 => \CREG_INJ_DONE:control_6\,
            control_5 => \CREG_INJ_DONE:control_5\,
            control_4 => \CREG_INJ_DONE:control_4\,
            control_3 => \CREG_INJ_DONE:control_3\,
            control_2 => \CREG_INJ_DONE:control_2\,
            control_1 => \CREG_INJ_DONE:control_1\,
            control_0 => Net_570,
            busclk => ClockBlock_BUS_CLK);

    \PWM_LED:PWMUDB:genblk8:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => ClockBlock_BUS_CLK,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \PWM_LED:PWMUDB:status_3\,
            status_2 => open,
            status_1 => open,
            status_0 => \PWM_LED:PWMUDB:status_0\);

    \PWM_LED:PWMUDB:sP8:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => ClockBlock_BUS_CLK,
            cs_addr_2 => \PWM_LED:PWMUDB:tc_i\,
            cs_addr_1 => open,
            cl0_comb => \PWM_LED:PWMUDB:cmp1_less\,
            z0_comb => \PWM_LED:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM_LED:PWMUDB:status_3\,
            busclk => ClockBlock_BUS_CLK);

    \CREG_RX_SLOTS1:Sync:ctrl_reg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "00000000",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clken_mode => 1)
        PORT MAP(
            control_7 => \CREG_RX_SLOTS1:control_7\,
            control_6 => Net_827_6,
            control_5 => Net_827_5,
            control_4 => Net_827_4,
            control_3 => Net_827_3,
            control_2 => Net_827_2,
            control_1 => Net_827_1,
            control_0 => Net_827_0,
            busclk => ClockBlock_BUS_CLK);

    \SREG_HEAD:sts:sts_reg\:statuscell
        GENERIC MAP(
            cy_force_order => 1,
            cy_md_select => "00000000",
            clken_mode => 1)
        PORT MAP(
            clock => open,
            status_7 => open,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => h3,
            status_2 => h2,
            status_1 => h1,
            status_0 => h0);

    \COMP_SLOW:ctComp\:comparatorcell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            out => Net_901);

    \COMP_FAST:ctComp\:comparatorcell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            out => Net_902);

    \DAC_SLOW:DMA\:drqcell
        GENERIC MAP(
            drq_type => "00",
            num_tds => 0)
        PORT MAP(
            dmareq => \DAC_SLOW:Net_12_local\,
            termin => '0',
            termout => \DAC_SLOW:Net_19\,
            clock => ClockBlock_BUS_CLK);

    \DAC_SLOW:VDAC8:viDAC8\:vidaccell
        GENERIC MAP(
            cy_registers => "",
            is_all_if_any => 0,
            reg_data => 0)
        PORT MAP(
            reset => open,
            idir => open,
            ioff => open,
            strobe_udb => \DAC_SLOW:Net_12_local\);

    \DAC_FAST:DMA\:drqcell
        GENERIC MAP(
            drq_type => "00",
            num_tds => 0)
        PORT MAP(
            dmareq => \DAC_FAST:Net_12_local\,
            termin => '0',
            termout => \DAC_FAST:Net_19\,
            clock => ClockBlock_BUS_CLK);

    \DAC_FAST:VDAC8:viDAC8\:vidaccell
        GENERIC MAP(
            cy_registers => "",
            is_all_if_any => 0,
            reg_data => 0)
        PORT MAP(
            reset => open,
            idir => open,
            ioff => open,
            strobe_udb => \DAC_FAST:Net_12_local\);

    \ADC_SAR:IRQ\:interrupt
        GENERIC MAP(
            int_type => "10",
            is_nmi => 0)
        PORT MAP(
            interrupt => Net_914,
            clock => ClockBlock_BUS_CLK);

    \ADC_SAR:ADC_SAR\:sarcell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            clock => \ClockBlock.aclk_glb_ff_0__sig\,
            pump_clock => \ClockBlock.aclk_glb_ff_0__sig\,
            sof_udb => clk_shift_local,
            vp_ctl_udb_3 => open,
            vp_ctl_udb_2 => open,
            vp_ctl_udb_1 => open,
            vp_ctl_udb_0 => open,
            vn_ctl_udb_3 => open,
            vn_ctl_udb_2 => open,
            vn_ctl_udb_1 => open,
            vn_ctl_udb_0 => open,
            irq => \ADC_SAR:Net_252\,
            next => Net_911,
            data_out_udb_11 => \ADC_SAR:Net_207_11\,
            data_out_udb_10 => \ADC_SAR:Net_207_10\,
            data_out_udb_9 => \ADC_SAR:Net_207_9\,
            data_out_udb_8 => \ADC_SAR:Net_207_8\,
            data_out_udb_7 => \ADC_SAR:Net_207_7\,
            data_out_udb_6 => \ADC_SAR:Net_207_6\,
            data_out_udb_5 => \ADC_SAR:Net_207_5\,
            data_out_udb_4 => \ADC_SAR:Net_207_4\,
            data_out_udb_3 => \ADC_SAR:Net_207_3\,
            data_out_udb_2 => \ADC_SAR:Net_207_2\,
            data_out_udb_1 => \ADC_SAR:Net_207_1\,
            data_out_udb_0 => \ADC_SAR:Net_207_0\,
            eof_udb => Net_914);

    DMA_AVG:drqcell
        GENERIC MAP(
            drq_type => "00",
            num_tds => 0)
        PORT MAP(
            dmareq => Net_914,
            termin => '0',
            termout => Net_917,
            clock => ClockBlock_BUS_CLK);

    ISR_HEADER_READ:interrupt
        GENERIC MAP(
            int_type => "00",
            is_nmi => 0)
        PORT MAP(
            interrupt => Net_939,
            clock => ClockBlock_BUS_CLK);

    Net_34_3:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_34_3,
            clock_0 => clk_slots,
            main_0 => Net_34_2,
            main_1 => Net_34_1,
            main_2 => Net_34_0);

    Net_34_2:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_2 * main_3) + (main_1 * main_2 * main_3)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_34_2,
            clock_0 => clk_slots,
            main_0 => Net_34_3,
            main_1 => Net_34_2,
            main_2 => Net_34_1,
            main_3 => Net_34_0);

    Net_34_1:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_34_1,
            clock_0 => clk_slots,
            main_0 => Net_34_0);

    Net_34_0:macrocell
        GENERIC MAP(
            eqn_main => "1'b0",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_34_0,
            clock_0 => clk_slots);

    Net_77_2:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2) + (main_1 * main_2 * main_3)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_77_2,
            clk_en => open,
            clock_0 => pay_shift_lo,
            main_0 => Net_77_2,
            main_1 => Net_77_1,
            main_2 => Net_77_0,
            main_3 => pay_en);

    Net_77_1:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2) + (main_2 * main_3)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_77_1,
            clk_en => open,
            clock_0 => pay_shift_lo,
            main_0 => Net_77_2,
            main_1 => Net_77_1,
            main_2 => Net_77_0,
            main_3 => pay_en);

    Net_77_0:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2) + (main_3)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_77_0,
            clk_en => open,
            clock_0 => pay_shift_lo,
            main_0 => Net_77_2,
            main_1 => Net_77_1,
            main_2 => Net_77_0,
            main_3 => pay_en);

    pay_en_lo:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * main_3) + (!main_4 * !main_5) + (!main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => pay_en_lo,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => Net_34_3,
            main_1 => Net_34_2,
            main_2 => Net_34_1,
            main_3 => Net_34_0,
            main_4 => pay_en,
            main_5 => pay_en_lo,
            main_6 => clk_shift_local);

    Net_146:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_146,
            clk_en => open,
            clock_0 => pay_shift_hi,
            main_0 => Net_142);

    Net_142:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_8 * main_9 * main_10) + (main_1 * main_8 * main_9 * !main_10) + (main_2 * main_8 * !main_9 * main_10) + (main_3 * main_8 * !main_9 * !main_10) + (main_4 * !main_8 * main_9 * main_10) + (main_5 * !main_8 * main_9 * !main_10) + (main_6 * !main_8 * !main_9 * main_10) + (main_7 * !main_8 * !main_9 * !main_10)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_142,
            clk_en => open,
            clock_0 => pay_shift_hi,
            main_0 => Net_60,
            main_1 => Net_57,
            main_2 => Net_58,
            main_3 => Net_59,
            main_4 => Net_61,
            main_5 => Net_62,
            main_6 => Net_63,
            main_7 => Net_64,
            main_8 => Net_77_2,
            main_9 => Net_77_1,
            main_10 => Net_77_0);

    Net_209_1:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_209_1,
            clk_en => open,
            clock_0 => pay_shift_hi,
            main_0 => pay_en,
            main_1 => Net_209_0);

    Net_209_0:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_209_0,
            clk_en => open,
            clock_0 => pay_shift_hi,
            main_0 => pay_en);

    ham_full:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_3) + (main_2 * !main_3)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => ham_full,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => Net_209_1,
            main_1 => Net_209_0,
            main_2 => ham_full,
            main_3 => ham_full_res);

    Net_280_2:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2) + (main_1 * main_2 * main_3)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_280_2,
            clk_en => open,
            clock_0 => ser_shift_lo,
            main_0 => Net_280_2,
            main_1 => Net_280_1,
            main_2 => Net_280_0,
            main_3 => ser_en);

    Net_280_1:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2) + (main_2 * main_3)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_280_1,
            clk_en => open,
            clock_0 => ser_shift_lo,
            main_0 => Net_280_2,
            main_1 => Net_280_1,
            main_2 => Net_280_0,
            main_3 => ser_en);

    Net_280_0:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2) + (!main_3)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_280_0,
            clk_en => open,
            clock_0 => ser_shift_lo,
            main_0 => Net_280_2,
            main_1 => Net_280_1,
            main_2 => Net_280_0,
            main_3 => ser_en);

    cydff_5:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_8 * main_9 * main_10) + (main_1 * main_8 * main_9 * !main_10) + (main_2 * main_8 * !main_9 * main_10) + (main_3 * main_8 * !main_9 * !main_10) + (main_4 * !main_8 * main_9 * main_10) + (main_5 * !main_8 * main_9 * !main_10) + (main_6 * !main_8 * !main_9 * main_10) + (main_7 * !main_8 * !main_9 * !main_10)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => cydff_5,
            clk_en => open,
            clock_0 => ser_shift_hi,
            main_0 => Net_258,
            main_1 => Net_255,
            main_2 => Net_256,
            main_3 => Net_257,
            main_4 => Net_259,
            main_5 => Net_260,
            main_6 => Net_261,
            main_7 => Net_262,
            main_8 => Net_280_2,
            main_9 => Net_280_1,
            main_10 => Net_280_0);

    cydff_6:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => cydff_6,
            clk_en => open,
            clock_0 => ser_shift_hi,
            main_0 => cydff_5);

    cydff_7:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => cydff_7,
            clk_en => open,
            clock_0 => ser_shift_hi,
            main_0 => cydff_6);

    cydff_8:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => cydff_8,
            clk_en => open,
            clock_0 => ser_shift_hi,
            main_0 => cydff_7);

    cydff_9:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => cydff_9,
            clk_en => open,
            clock_0 => ser_shift_hi,
            main_0 => cydff_8);

    ser_en_lo:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * !main_3) + (!main_4 * !main_5) + (!main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => ser_en_lo,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => Net_34_3,
            main_1 => Net_34_2,
            main_2 => Net_34_1,
            main_3 => Net_34_0,
            main_4 => ser_en,
            main_5 => ser_en_lo,
            main_6 => clk_shift_local);

    Net_420_2:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_2 * main_3 * main_4) + (main_1 * main_2)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_420_2,
            clk_en => open,
            clock_0 => ser_shift_lo,
            main_0 => ser_en,
            main_1 => Net_420_2,
            main_2 => Net_386,
            main_3 => Net_420_1,
            main_4 => Net_420_0);

    Net_420_1:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_3) + (main_1 * main_2)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_420_1,
            clk_en => open,
            clock_0 => ser_shift_lo,
            main_0 => ser_en,
            main_1 => Net_386,
            main_2 => Net_420_1,
            main_3 => Net_420_0);

    Net_420_0:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2) + (main_0 * !main_1 * !main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_420_0,
            clk_en => open,
            clock_0 => ser_shift_lo,
            main_0 => ser_en,
            main_1 => Net_386,
            main_2 => Net_420_0);

    cy_srff_4:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1) + (!main_1 * !main_2 * !main_3 * !main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => cy_srff_4,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => cy_srff_4,
            main_1 => symb_inj_done,
            main_2 => Net_485_4,
            main_3 => Net_485_3,
            main_4 => Net_485_2,
            main_5 => Net_485_1,
            main_6 => Net_485_0);

    Net_485_4:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_2 * main_3 * main_4 * main_5 * main_6) + (main_1 * main_2)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_485_4,
            clk_en => open,
            clock_0 => symb_ready,
            main_0 => ser_en,
            main_1 => Net_485_4,
            main_2 => Net_474,
            main_3 => Net_485_3,
            main_4 => Net_485_2,
            main_5 => Net_485_1,
            main_6 => Net_485_0);

    Net_485_3:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_3 * main_4 * main_5) + (main_1 * main_2)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_485_3,
            clk_en => open,
            clock_0 => symb_ready,
            main_0 => ser_en,
            main_1 => Net_474,
            main_2 => Net_485_3,
            main_3 => Net_485_2,
            main_4 => Net_485_1,
            main_5 => Net_485_0);

    Net_485_2:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_3 * main_4) + (main_1 * main_2)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_485_2,
            clk_en => open,
            clock_0 => symb_ready,
            main_0 => ser_en,
            main_1 => Net_474,
            main_2 => Net_485_2,
            main_3 => Net_485_1,
            main_4 => Net_485_0);

    Net_485_1:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_3) + (main_1 * main_2)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_485_1,
            clk_en => open,
            clock_0 => symb_ready,
            main_0 => ser_en,
            main_1 => Net_474,
            main_2 => Net_485_1,
            main_3 => Net_485_0);

    Net_485_0:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2) + (main_0 * !main_1 * !main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_485_0,
            clk_en => open,
            clock_0 => symb_ready,
            main_0 => ser_en,
            main_1 => Net_474,
            main_2 => Net_485_0);

    \UART:BUART:txn\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_6) + (main_0 * main_4) + (!main_1 * main_2 * !main_3 * !main_4) + (!main_1 * main_2 * !main_4 * !main_6) + (main_1 * !main_2 * !main_3 * !main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:txn\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:txn\,
            main_1 => \UART:BUART:tx_state_1\,
            main_2 => \UART:BUART:tx_state_0\,
            main_3 => \UART:BUART:tx_shift_out\,
            main_4 => \UART:BUART:tx_state_2\,
            main_5 => \UART:BUART:tx_counter_dp\,
            main_6 => \UART:BUART:tx_bitclk\);

    \UART:BUART:tx_state_1\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * main_3) + (main_0 * !main_3 * main_4 * main_5) + (main_1 * !main_3 * main_5)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:tx_state_1\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_state_1\,
            main_1 => \UART:BUART:tx_state_0\,
            main_2 => \UART:BUART:tx_bitclk_enable_pre\,
            main_3 => \UART:BUART:tx_state_2\,
            main_4 => \UART:BUART:tx_counter_dp\,
            main_5 => \UART:BUART:tx_bitclk\);

    \UART:BUART:tx_state_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * !main_3) + (!main_0 * !main_1 * !main_3 * !main_4) + (main_0 * main_1 * main_2 * main_3 * main_4) + (main_1 * !main_4 * main_5)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:tx_state_0\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_state_1\,
            main_1 => \UART:BUART:tx_state_0\,
            main_2 => \UART:BUART:tx_bitclk_enable_pre\,
            main_3 => \UART:BUART:tx_fifo_empty\,
            main_4 => \UART:BUART:tx_state_2\,
            main_5 => \UART:BUART:tx_bitclk\);

    \UART:BUART:tx_state_2\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * main_3) + (main_0 * main_1 * main_2 * main_3) + (main_0 * main_1 * !main_3 * main_5) + (main_0 * !main_3 * main_4 * main_5)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:tx_state_2\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_state_1\,
            main_1 => \UART:BUART:tx_state_0\,
            main_2 => \UART:BUART:tx_bitclk_enable_pre\,
            main_3 => \UART:BUART:tx_state_2\,
            main_4 => \UART:BUART:tx_counter_dp\,
            main_5 => \UART:BUART:tx_bitclk\);

    \UART:BUART:tx_bitclk\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_3) + (!main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:tx_bitclk\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_state_1\,
            main_1 => \UART:BUART:tx_state_0\,
            main_2 => \UART:BUART:tx_bitclk_enable_pre\,
            main_3 => \UART:BUART:tx_state_2\);

    \UART:BUART:tx_ctrl_mark_last\:macrocell
        GENERIC MAP(
            eqn_main => "1'b0",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:tx_ctrl_mark_last\,
            clock_0 => \UART:Net_9\);

    \UART:BUART:rx_state_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * !main_3 * main_4 * !main_8 * !main_9) + (!main_0 * !main_1 * main_2 * !main_3 * main_4 * !main_8 * !main_10) + (!main_0 * main_1 * !main_3 * !main_4 * !main_5 * !main_6) + (!main_0 * main_1 * !main_3 * !main_4 * !main_5 * !main_7)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_state_0\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_ctrl_mark_last\,
            main_1 => \UART:BUART:rx_state_0\,
            main_2 => \UART:BUART:rx_bitclk_enable\,
            main_3 => \UART:BUART:rx_state_3\,
            main_4 => \UART:BUART:rx_state_2\,
            main_5 => \UART:BUART:rx_count_6\,
            main_6 => \UART:BUART:rx_count_5\,
            main_7 => \UART:BUART:rx_count_4\,
            main_8 => \UART:BUART:pollcount_1\,
            main_9 => Net_542,
            main_10 => \UART:BUART:pollcount_0\);

    \UART:BUART:rx_load_fifo\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * main_3 * !main_4) + (!main_0 * main_1 * !main_3 * !main_4 * !main_5 * !main_6) + (!main_0 * main_1 * !main_3 * !main_4 * !main_5 * !main_7)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_load_fifo\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_ctrl_mark_last\,
            main_1 => \UART:BUART:rx_state_0\,
            main_2 => \UART:BUART:rx_bitclk_enable\,
            main_3 => \UART:BUART:rx_state_3\,
            main_4 => \UART:BUART:rx_state_2\,
            main_5 => \UART:BUART:rx_count_6\,
            main_6 => \UART:BUART:rx_count_5\,
            main_7 => \UART:BUART:rx_count_4\);

    \UART:BUART:rx_state_3\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * main_3 * main_4) + (!main_0 * main_1 * !main_3 * !main_4 * !main_5 * !main_6) + (!main_0 * main_1 * !main_3 * !main_4 * !main_5 * !main_7)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_state_3\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_ctrl_mark_last\,
            main_1 => \UART:BUART:rx_state_0\,
            main_2 => \UART:BUART:rx_bitclk_enable\,
            main_3 => \UART:BUART:rx_state_3\,
            main_4 => \UART:BUART:rx_state_2\,
            main_5 => \UART:BUART:rx_count_6\,
            main_6 => \UART:BUART:rx_count_5\,
            main_7 => \UART:BUART:rx_count_4\);

    \UART:BUART:rx_state_2\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * main_3) + (!main_0 * !main_1 * main_2 * main_4) + (!main_0 * !main_1 * !main_3 * !main_4 * !main_8 * main_9) + (!main_0 * main_1 * !main_3 * !main_4 * !main_5 * !main_6) + (!main_0 * main_1 * !main_3 * !main_4 * !main_5 * !main_7)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_state_2\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_ctrl_mark_last\,
            main_1 => \UART:BUART:rx_state_0\,
            main_2 => \UART:BUART:rx_bitclk_enable\,
            main_3 => \UART:BUART:rx_state_3\,
            main_4 => \UART:BUART:rx_state_2\,
            main_5 => \UART:BUART:rx_count_6\,
            main_6 => \UART:BUART:rx_count_5\,
            main_7 => \UART:BUART:rx_count_4\,
            main_8 => Net_542,
            main_9 => \UART:BUART:rx_last\);

    \UART:BUART:rx_bitclk_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_bitclk_enable\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:rx_count_2\,
            main_1 => \UART:BUART:rx_count_1\,
            main_2 => \UART:BUART:rx_count_0\);

    \UART:BUART:rx_state_stop1_reg\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * main_3)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_state_stop1_reg\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_ctrl_mark_last\,
            main_1 => \UART:BUART:rx_state_0\,
            main_2 => \UART:BUART:rx_state_3\,
            main_3 => \UART:BUART:rx_state_2\);

    \UART:BUART:pollcount_1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * main_3 * main_4) + (!main_0 * !main_1 * main_2 * !main_3) + (!main_0 * !main_1 * main_2 * !main_4)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:pollcount_1\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:rx_count_2\,
            main_1 => \UART:BUART:rx_count_1\,
            main_2 => \UART:BUART:pollcount_1\,
            main_3 => Net_542,
            main_4 => \UART:BUART:pollcount_0\);

    \UART:BUART:pollcount_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * main_3) + (!main_0 * !main_1 * main_2 * !main_3)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:pollcount_0\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:rx_count_2\,
            main_1 => \UART:BUART:rx_count_1\,
            main_2 => Net_542,
            main_3 => \UART:BUART:pollcount_0\);

    \UART:BUART:rx_status_3\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2 * main_3 * main_4 * !main_5 * !main_6) + (!main_0 * !main_1 * main_2 * main_3 * main_4 * !main_5 * !main_7)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_status_3\,
            clock_0 => \UART:Net_9\,
            main_0 => \UART:BUART:tx_ctrl_mark_last\,
            main_1 => \UART:BUART:rx_state_0\,
            main_2 => \UART:BUART:rx_bitclk_enable\,
            main_3 => \UART:BUART:rx_state_3\,
            main_4 => \UART:BUART:rx_state_2\,
            main_5 => \UART:BUART:pollcount_1\,
            main_6 => Net_542,
            main_7 => \UART:BUART:pollcount_0\);

    \UART:BUART:rx_last\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \UART:BUART:rx_last\,
            clock_0 => \UART:Net_9\,
            main_0 => Net_542);

    \PWM_LED:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \PWM_LED:PWMUDB:prevCompare1\,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => \PWM_LED:PWMUDB:cmp1_less\);

    \PWM_LED:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \PWM_LED:PWMUDB:status_0\,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => \PWM_LED:PWMUDB:prevCompare1\,
            main_1 => \PWM_LED:PWMUDB:cmp1_less\);

    Net_617:macrocell
        GENERIC MAP(
            eqn_main => "1'b0",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_617,
            clock_0 => ClockBlock_BUS_CLK);

    symb_inj_done:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (!main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => symb_inj_done,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => cy_srff_4,
            main_1 => symb_inj_done,
            main_2 => Net_570);

    h3:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => h3,
            clk_en => rx_slot0,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => h2);

    h2:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => h2,
            clk_en => rx_slot0,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => h1);

    h1:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => h1,
            clk_en => rx_slot0,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => h0);

    h0:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => h0,
            clk_en => rx_slot0,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => Net_758);

    Net_758:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => Net_758,
            clk_en => rx_slot0,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => Net_759);

    Net_759:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => Net_759,
            clk_en => rx_slot0,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => Net_760);

    Net_760:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => Net_760,
            clk_en => rx_slot0,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => Net_761);

    Net_761:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => Net_761,
            clk_en => rx_slot0,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => Net_901,
            main_1 => Net_902);

    Net_923_2:macrocell
        GENERIC MAP(
            eqn_main => "1'b0",
            regmode => 2,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => Net_923_2,
            clk_en => rx_slot0,
            clock_0 => ClockBlock_BUS_CLK);

END __DEFAULT__;
